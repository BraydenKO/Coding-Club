import pygame


pygame.init()
clock = pygame.time.Clock()

RUNNING = True

width = 800
height = 800

myfont = pygame.font.SysFont('Comic Sans MS', 30, bold=True)

screen = pygame.display.set_mode((width,height))
pygame.display.set_caption("Tic-Tac-Toe")

vertical_line = pygame.Rect(width/3-5, 0, 10, height)
vertical_line1 = pygame.Rect(2*width/3-5, 0, 10, height)

horizontal_line = pygame.Rect(0, height/3-5, width, 10)
horizontal_line1 = pygame.Rect(0, 2*height/3-5, width, 10)
player = pygame.Rect(width-20,height/2-70,10,140)

#function: creates board made of -
def create_board():
    return [["-" for i in range(3)] for i in range(3)]

#function: prints the board in an easy to read format
def print_board(board):
    for y in board:
        for x in y:
            print(x, end = "   ")
        print("\n")

#function: changes element - in list to either X or O 
def play_move(board, player):
    global winner
    y = input(f"{player}, Enter row number (either 0, 1 or 2 where the top is 0): ")
    x = input(f"{player}, Enter column number (either 0, 1, or 2 where the leftmost is 0: ")
    if y == "stop" or x == "stop":
        winner = "No one"
        return
    y = int(y)
    x = int(x)
    if board[y][x] == "-":
        board[y][x] = player
    else:
        print("That spot is already taken!")
        play_move(board,player)

#function: Tests if any of the winner possibilities is true and returns the winner
def get_winner(board):
    if winner != None:
        return winner
    for player in ["X","O"]:
        for y in board:
            if all(cell == player for cell in y):
                return player
        for column in get_columns(board):
            if all(cell == player for cell in column): 
                return player
        for diagonal in get_diagonals(board):
            if all(cell == player for cell in diagonal):
                return player
    else:
        return

#function: Creates a list of 3 columns
def get_columns(board):
    result = [[y [x_idx] for y in board] for x_idx in range(3)]
    return result
#function: Creates a list of 2 diagnals
def get_diagonals(board):
    diag1 = [ board[index][index] for index in range(3)]
    diag2 = [board [y][x] for y in range(3) for x in range(2,-1,-1)]
    return diag1, diag2

#function: Handles other functions and ends the game when needed
def play_game(board):
    global winner
    winner = None
    while winner == None:
        for player in ["X","O"]:
            if winner == None:
                play_move(board, player)
                print_board(board)
                winner = get_winner(board)
    print(winner, "won!")

board = create_board()

while RUNNING:
    for event in pygame.event.get():
        if event.type== pygame.QUIT:
            RUNNING = False
          
    screen.fill((100,100,100))
    for line in (vertical_line, vertical_line1, horizontal_line, horizontal_line1):
        pygame.draw.rect(screen, (255,255,255), line)
    for i in range(3):
        for j in range(3):
            if board[i][j] != "-":
                cell_block = myfont.render(board[i][j], False, (255,255,255))
                screen.blit(cell_block, ((j*2+1)/6*width, (i*2+1)/6*height))
    #0,0 1/6.1/6 0,1 3/6 3/6 0,2 5/6 1,0 3/6 1/6 0-1 1-3 2-5

    clock.tick(60)
    pygame.display.flip()
pygame.quit()


